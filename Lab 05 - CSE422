{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.7"},"colab":{"name":"Lab 05 - CSE422","provenance":[{"file_id":"1_794R2HWZJYT06Q2iXBouXsrzXX-bQ_P","timestamp":1648868144986},{"file_id":"1Usm5b-bmPvskn_OxdQj_Dn0Pl2Xj2HYZ","timestamp":1598122941811}],"collapsed_sections":[]}},"cells":[{"cell_type":"markdown","metadata":{"id":"lzS89dStTfrQ"},"source":["## CSE 422 Introduction to Data Preprocessing\n","---\n","\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"cAhCkRL_SscW"},"source":["### What are the advantages of preprocessing the data before applying on machine learning algorithm?\n","\n","\"The biggest advantage of pre-processing in ML is to improve **generalizablity** of your model. Data for any ML application is collected through some ‘sensors’. These sensors can be physical devices, instruments, software programs such as web crawlers, manual surveys, etc. Due to hardware malfunctions, software glitches, instrument failures, amd human errors, noise and erroneous information may creep in that can severely affect the performance of your model. Apart from **noise**, there are several **redundant information** that needs to be removed. For e.g. while predicting whether it rains tomorrow or not, age of the person is irrelevant. In terms of text processing, there are several stop words that may be redundant for the analysis. Lastly, there may be several **outliers** present in your data, due to the way data is collected that may need to be removed to improve the performance of the classifiers.\" \n","                                    \n","                                            -Shehroz Khan, ML Researcher, Postdoc @U of Toronto\n"]},{"cell_type":"markdown","metadata":{"id":"0YYIQ5CNcZx-"},"source":["Some Data Preprocessing Techniques:\n","\n","* Deleting duplicate and null values\n","* Imputation for missing values\n","* Handling Categorical Features\n","* Feature Normalization/Scaling\n","* Feature Engineering\n","* Feature Selection"]},{"cell_type":"code","metadata":{"id":"gZPvqZUPTfrH","executionInfo":{"status":"ok","timestamp":1648869320076,"user_tz":-360,"elapsed":405,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["#importing necessary libraries\n","import pandas as pd\n","import numpy as np\n"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0EvGojt9m-Yo"},"source":["#Removing Null values / Handling Missing data\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"40I_BWUeTfrS","colab":{"base_uri":"https://localhost:8080/","height":515},"executionInfo":{"status":"ok","timestamp":1648869321283,"user_tz":-360,"elapsed":710,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"816b6d51-a0ee-4b6b-9563-e1a165dfe037"},"source":["volunteer = pd.read_csv('/content/sample_data/volunteer_opportunities.csv')\n","volunteer.head(3)"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   opportunity_id  content_id  vol_requests  event_time  \\\n","0            4996       37004            50           0   \n","1            5008       37036             2           0   \n","2            5016       37143            20           0   \n","\n","                                               title  hits  \\\n","0  Volunteers Needed For Rise Up & Stay Put! Home...   737   \n","1                                       Web designer    22   \n","2      Urban Adventures - Ice Skating at Lasker Rink    62   \n","\n","                                             summary is_priority  category_id  \\\n","0  Building on successful events last summer and ...         NaN          NaN   \n","1             Build a website for an Afghan business         NaN          1.0   \n","2  Please join us and the students from Mott Hall...         NaN          1.0   \n","\n","               category_desc  ...     end_date_date    status Latitude  \\\n","0                        NaN  ...      July 30 2011  approved      NaN   \n","1  Strengthening Communities  ...  February 01 2011  approved      NaN   \n","2  Strengthening Communities  ...   January 29 2011  approved      NaN   \n","\n","   Longitude  Community Board Community Council  Census Tract  BIN  BBL NTA  \n","0        NaN              NaN                NaN          NaN  NaN  NaN NaN  \n","1        NaN              NaN                NaN          NaN  NaN  NaN NaN  \n","2        NaN              NaN                NaN          NaN  NaN  NaN NaN  \n","\n","[3 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-da675630-4255-4049-b275-e0a652213dce\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>opportunity_id</th>\n","      <th>content_id</th>\n","      <th>vol_requests</th>\n","      <th>event_time</th>\n","      <th>title</th>\n","      <th>hits</th>\n","      <th>summary</th>\n","      <th>is_priority</th>\n","      <th>category_id</th>\n","      <th>category_desc</th>\n","      <th>...</th>\n","      <th>end_date_date</th>\n","      <th>status</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","      <th>Community Board</th>\n","      <th>Community Council</th>\n","      <th>Census Tract</th>\n","      <th>BIN</th>\n","      <th>BBL</th>\n","      <th>NTA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4996</td>\n","      <td>37004</td>\n","      <td>50</td>\n","      <td>0</td>\n","      <td>Volunteers Needed For Rise Up &amp; Stay Put! Home...</td>\n","      <td>737</td>\n","      <td>Building on successful events last summer and ...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>July 30 2011</td>\n","      <td>approved</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5008</td>\n","      <td>37036</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>Web designer</td>\n","      <td>22</td>\n","      <td>Build a website for an Afghan business</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>Strengthening Communities</td>\n","      <td>...</td>\n","      <td>February 01 2011</td>\n","      <td>approved</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5016</td>\n","      <td>37143</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>Urban Adventures - Ice Skating at Lasker Rink</td>\n","      <td>62</td>\n","      <td>Please join us and the students from Mott Hall...</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>Strengthening Communities</td>\n","      <td>...</td>\n","      <td>January 29 2011</td>\n","      <td>approved</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 35 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da675630-4255-4049-b275-e0a652213dce')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da675630-4255-4049-b275-e0a652213dce button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da675630-4255-4049-b275-e0a652213dce');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"utvR4slHUUoH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321284,"user_tz":-360,"elapsed":59,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"fdea2dd6-eca7-45e1-8798-b749d9608098"},"source":["volunteer.shape"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(665, 35)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"RFHvAKsPaJhH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321286,"user_tz":-360,"elapsed":55,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"a869c7ad-7697-4c4d-9106-22b0154cfd56"},"source":["volunteer.isnull().sum()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["opportunity_id          0\n","content_id              0\n","vol_requests            0\n","event_time              0\n","title                   0\n","hits                    0\n","summary                 0\n","is_priority           603\n","category_id            48\n","category_desc          48\n","amsl                  665\n","amsl_unit             665\n","org_title               0\n","org_content_id          0\n","addresses_count         0\n","locality               70\n","region                  0\n","postalcode              6\n","primary_loc           665\n","display_url             0\n","recurrence_type         0\n","hours                   0\n","created_date            0\n","last_modified_date      0\n","start_date_date         0\n","end_date_date           0\n","status                  0\n","Latitude              665\n","Longitude             665\n","Community Board       665\n","Community Council     665\n","Census Tract          665\n","BIN                   665\n","BBL                   665\n","NTA                   665\n","dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"1mD-JfDWa_Fu"},"source":["dropping columns"]},{"cell_type":"code","metadata":{"id":"ktNVIfmZMPuT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321288,"user_tz":-360,"elapsed":55,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"ab4b86a5-31d3-43e1-a9dd-24f2934732fa"},"source":["volunteer = volunteer.drop(['BIN', 'BBL', 'NTA'], axis = 1)\n","volunteer.shape"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(665, 32)"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"QOY4Abiua72Z"},"source":["dropping rows"]},{"cell_type":"code","metadata":{"id":"66t7QR7sTfrX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321288,"user_tz":-360,"elapsed":53,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"32946608-d500-4db3-8512-d27f2d0c1c88"},"source":["# Check how many values are missing in the category_desc column\n","print(\"Number of rows with null values in category_desc column: \", volunteer['category_desc'].isnull().sum())\n","\n","# Subset the volunteer dataset\n","\n","volunteer_subset = volunteer[volunteer['category_desc'].notnull()]\n","\n","# Print out the shape of the subset\n","print(\"Shape after removing null values: \", volunteer_subset.shape)"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of rows with null values in category_desc column:  48\n","Shape after removing null values:  (617, 32)\n"]}]},{"cell_type":"code","metadata":{"id":"-S7J7lLOrJdJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321289,"user_tz":-360,"elapsed":52,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"449f1d31-9b32-4698-bfb9-decee45ed1fb"},"source":["print(\"Shape of dataframe before dropping:\", volunteer.shape)\n","volunteer = volunteer.dropna(axis = 0, subset = ['category_desc'])\n","print(\"Shape after dropping:\", volunteer.shape)"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of dataframe before dropping: (665, 32)\n","Shape after dropping: (617, 32)\n"]}]},{"cell_type":"markdown","metadata":{"id":"_W4nE4hGip78"},"source":["### Imputing missing Values"]},{"cell_type":"code","metadata":{"id":"IDnuRns2rWJ0","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1648869321290,"user_tz":-360,"elapsed":52,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"7e778463-5c19-4926-c722-17cf97c2487a"},"source":["sales = pd.read_csv('/content/sample_data/sales.csv', index_col = ['month'])\n","sales"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       eggs  salt  spam\n","month                  \n","Jan      47  12.0    17\n","Feb     110  50.0    31\n","Mar     221  89.0    72\n","Apr      77  87.0    20\n","May     132   NaN    52\n","Jun     205  60.0    55"],"text/html":["\n","  <div id=\"df-98960aaf-9764-4ab9-a0fc-d72c272aac63\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>eggs</th>\n","      <th>salt</th>\n","      <th>spam</th>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Jan</th>\n","      <td>47</td>\n","      <td>12.0</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>Feb</th>\n","      <td>110</td>\n","      <td>50.0</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>Mar</th>\n","      <td>221</td>\n","      <td>89.0</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>Apr</th>\n","      <td>77</td>\n","      <td>87.0</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>May</th>\n","      <td>132</td>\n","      <td>NaN</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>Jun</th>\n","      <td>205</td>\n","      <td>60.0</td>\n","      <td>55</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98960aaf-9764-4ab9-a0fc-d72c272aac63')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-98960aaf-9764-4ab9-a0fc-d72c272aac63 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-98960aaf-9764-4ab9-a0fc-d72c272aac63');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"-gre3DF2BOBn","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1648869321292,"user_tz":-360,"elapsed":53,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"4a4d2999-7b8d-453e-ccb9-aefed2294e05"},"source":["sales.fillna(50)"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       eggs  salt  spam\n","month                  \n","Jan      47  12.0    17\n","Feb     110  50.0    31\n","Mar     221  89.0    72\n","Apr      77  87.0    20\n","May     132  50.0    52\n","Jun     205  60.0    55"],"text/html":["\n","  <div id=\"df-41ebbdf4-fc8e-49d7-baa3-2b49882f1f48\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>eggs</th>\n","      <th>salt</th>\n","      <th>spam</th>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Jan</th>\n","      <td>47</td>\n","      <td>12.0</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>Feb</th>\n","      <td>110</td>\n","      <td>50.0</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>Mar</th>\n","      <td>221</td>\n","      <td>89.0</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>Apr</th>\n","      <td>77</td>\n","      <td>87.0</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>May</th>\n","      <td>132</td>\n","      <td>50.0</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>Jun</th>\n","      <td>205</td>\n","      <td>60.0</td>\n","      <td>55</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41ebbdf4-fc8e-49d7-baa3-2b49882f1f48')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-41ebbdf4-fc8e-49d7-baa3-2b49882f1f48 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-41ebbdf4-fc8e-49d7-baa3-2b49882f1f48');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"WwA7m0GYBa0V","executionInfo":{"status":"ok","timestamp":1648869321293,"user_tz":-360,"elapsed":53,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["sales = pd.read_csv('/content/sample_data/sales.csv', index_col = ['month'])"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"18XKg-3tDV3S","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1648869321294,"user_tz":-360,"elapsed":53,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"67ec6c67-e2fd-4962-a7b2-6c9d7a37f7ff"},"source":["sales[['salt']]"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       salt\n","month      \n","Jan    12.0\n","Feb    50.0\n","Mar    89.0\n","Apr    87.0\n","May     NaN\n","Jun    60.0"],"text/html":["\n","  <div id=\"df-4d382f3a-8dde-4e55-b927-dd48c7656d04\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>salt</th>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Jan</th>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>Feb</th>\n","      <td>50.0</td>\n","    </tr>\n","    <tr>\n","      <th>Mar</th>\n","      <td>89.0</td>\n","    </tr>\n","    <tr>\n","      <th>Apr</th>\n","      <td>87.0</td>\n","    </tr>\n","    <tr>\n","      <th>May</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Jun</th>\n","      <td>60.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d382f3a-8dde-4e55-b927-dd48c7656d04')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4d382f3a-8dde-4e55-b927-dd48c7656d04 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4d382f3a-8dde-4e55-b927-dd48c7656d04');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"ugpsjd-SyEhC","executionInfo":{"status":"ok","timestamp":1648869321295,"user_tz":-360,"elapsed":54,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["from sklearn.impute import SimpleImputer\n","\n","impute = SimpleImputer(missing_values=np.nan, strategy='mean')\n","\n","impute.fit(sales[['salt']])\n","\n","sales['salt'] = impute.transform(sales[['salt']])"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"7ZTXR0hT15ZH","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1648869321297,"user_tz":-360,"elapsed":55,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"b325de79-a584-45b8-9eb4-a08a1aba3473"},"source":["sales"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       eggs  salt  spam\n","month                  \n","Jan      47  12.0    17\n","Feb     110  50.0    31\n","Mar     221  89.0    72\n","Apr      77  87.0    20\n","May     132  59.6    52\n","Jun     205  60.0    55"],"text/html":["\n","  <div id=\"df-b9e32350-8fa7-44a2-93f2-730325a5310a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>eggs</th>\n","      <th>salt</th>\n","      <th>spam</th>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Jan</th>\n","      <td>47</td>\n","      <td>12.0</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>Feb</th>\n","      <td>110</td>\n","      <td>50.0</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>Mar</th>\n","      <td>221</td>\n","      <td>89.0</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>Apr</th>\n","      <td>77</td>\n","      <td>87.0</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>May</th>\n","      <td>132</td>\n","      <td>59.6</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>Jun</th>\n","      <td>205</td>\n","      <td>60.0</td>\n","      <td>55</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9e32350-8fa7-44a2-93f2-730325a5310a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b9e32350-8fa7-44a2-93f2-730325a5310a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b9e32350-8fa7-44a2-93f2-730325a5310a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"IHnRFvFPTfr0"},"source":["## Standardizing Data"]},{"cell_type":"markdown","metadata":{"id":"kgHgelb9RUXB"},"source":["## Feature Scaling"]},{"cell_type":"markdown","metadata":{"id":"1lcM-IuqD_XW"},"source":["## Why do we need to scale our data?\n","* If a feature’s variance is orders of magnitude more than the variance of other features, that particular feature might dominate other features in the dataset and make the estimator unable to learn from other features correctly, i.e. our learner might give more importance to features with high variance, which is not something we want happening in our model.\n","\n","The following are a few different types of Scalers:\n"]},{"cell_type":"markdown","metadata":{"id":"Sq14OVytLYu4"},"source":["**MinMax Scaler:** \n","\n","Scales values to a range between 0 and 1 if no negative values, and -1 to 1 if there are negative values present.\n","\n","$$\\frac{X - X_{min}}{X_{max} - X_{min}}$$\n","\n","where, \n","\n"," $$X\\space is\\space a\\space feature\\space value.$$ \n"," $$X_{min} \\space and \\space X_{max} \\space are \\space corresponding \\space feature's \\space min \\space and \\space max \\space values. $$\n","\n","\n","**Standard Scaler:**\n","\n","$$\\frac{X - mean}{\\sigma}$$\n","where,\n","$$\\sigma = standard \\space deviation $$ \n","\n","**Robust Scaler:**\n","\n","Uses statistics that are robust to outliers\n","\n","$$\\frac{X - median}{IQR}$$\n","\n","where, \n","\n","$$ IQR = Inter\\space Quartile\\space Range = Q_3 - Q_1 $$\n"]},{"cell_type":"markdown","metadata":{"id":"KQob80w1EzLr"},"source":["Sklearn library provides functions for different scalers by which we can easily scale our data."]},{"cell_type":"code","metadata":{"id":"KtHgJCq694fQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321299,"user_tz":-360,"elapsed":57,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"ab0400ee-ba8b-42ea-8885-e364d30cd823"},"source":["from sklearn.datasets import load_breast_cancer\n","from sklearn.model_selection import train_test_split\n","\n","cancer = load_breast_cancer()\n","\n","X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target,\n","                                                    random_state=1)\n","print(X_train.shape)\n","print(X_test.shape)"],"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["(426, 30)\n","(143, 30)\n"]}]},{"cell_type":"code","metadata":{"id":"nmRRRpz9973B","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321300,"user_tz":-360,"elapsed":55,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"5a9c3163-224f-4361-f61d-9723a9560e14"},"source":["from sklearn.preprocessing import MinMaxScaler\n","\n","scaler = MinMaxScaler()\n","\n","scaler.fit(X_train)"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MinMaxScaler()"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"koZK3tgWFhGp","executionInfo":{"status":"ok","timestamp":1648869321300,"user_tz":-360,"elapsed":54,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["# transform data\n","X_train_scaled = scaler.transform(X_train)"],"execution_count":17,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"H-kDLXZu-YBX"},"source":["We can see that after Min-Max Scaling all the values are in the range [0,1]"]},{"cell_type":"code","metadata":{"id":"rc54JPhqF0dt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321300,"user_tz":-360,"elapsed":52,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"ddf6a438-8b97-4cf0-eac8-471d7a643ba9"},"source":["print(\"per-feature minimum before scaling:\\n {}\".format(X_train.min(axis=0)))\n","print(\"per-feature maximum before scaling:\\n {}\".format(X_train.max(axis=0)))"],"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["per-feature minimum before scaling:\n"," [6.981e+00 9.710e+00 4.379e+01 1.435e+02 5.263e-02 1.938e-02 0.000e+00\n"," 0.000e+00 1.060e-01 5.024e-02 1.153e-01 3.602e-01 7.570e-01 6.802e+00\n"," 1.713e-03 2.252e-03 0.000e+00 0.000e+00 9.539e-03 8.948e-04 7.930e+00\n"," 1.202e+01 5.041e+01 1.852e+02 7.117e-02 2.729e-02 0.000e+00 0.000e+00\n"," 1.566e-01 5.521e-02]\n","per-feature maximum before scaling:\n"," [2.811e+01 3.928e+01 1.885e+02 2.501e+03 1.634e-01 2.867e-01 4.268e-01\n"," 2.012e-01 3.040e-01 9.575e-02 2.873e+00 4.885e+00 2.198e+01 5.422e+02\n"," 3.113e-02 1.354e-01 3.960e-01 5.279e-02 6.146e-02 2.984e-02 3.604e+01\n"," 4.954e+01 2.512e+02 4.254e+03 2.226e-01 9.379e-01 1.170e+00 2.910e-01\n"," 5.774e-01 1.486e-01]\n"]}]},{"cell_type":"code","metadata":{"id":"cWXrV9lp-Bkp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321301,"user_tz":-360,"elapsed":51,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"7e7e8d84-5031-4128-8bb7-6579a6afbc59"},"source":["print(\"per-feature minimum after scaling:\\n {}\".format(\n","    X_train_scaled.min(axis=0)))\n","print(\"per-feature maximum after scaling:\\n {}\".format(\n","    X_train_scaled.max(axis=0)))"],"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["per-feature minimum after scaling:\n"," [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0.]\n","per-feature maximum after scaling:\n"," [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n"," 1. 1. 1. 1. 1. 1.]\n"]}]},{"cell_type":"code","metadata":{"id":"c_7BmLE--E3w","executionInfo":{"status":"ok","timestamp":1648869321303,"user_tz":-360,"elapsed":51,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["# transform test data\n","X_test_scaled = scaler.transform(X_test)\n"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cvIJO2eeNp2D"},"source":["## Effect of using MinMax Scaler:"]},{"cell_type":"markdown","metadata":{"id":"cWcMT_EGGcwN"},"source":["### Accuracy without scaling"]},{"cell_type":"code","metadata":{"id":"WSA3eWpW9dlQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321304,"user_tz":-360,"elapsed":52,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"cbb7338e-0bd8-4a81-f7ba-0a604470c1d8"},"source":["from sklearn.neighbors import KNeighborsClassifier\n","X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target,\n","                                                    random_state=0)\n","knn=KNeighborsClassifier()\n","\n","knn.fit(X_train, y_train)\n","\n","print(\"Test set accuracy: {:.2f}\".format(knn.score(X_test, y_test)))"],"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Test set accuracy: 0.94\n"]}]},{"cell_type":"markdown","metadata":{"id":"a3T7WMdS_X57"},"source":["### We can see that accuracy improves if we train on scaled data."]},{"cell_type":"code","metadata":{"id":"_4zKCdAA9dhi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321305,"user_tz":-360,"elapsed":51,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"dbb957c7-cd1f-4bca-c0c2-52678f0df0c9"},"source":["# preprocessing using 0-1 scaling\n","scaler = MinMaxScaler()\n","scaler.fit(X_train)\n","\n","X_train_scaled = scaler.transform(X_train)\n","\n","X_test_scaled = scaler.transform(X_test)\n","\n","#train\n","knn.fit(X_train_scaled, y_train)\n","\n","# scoring on the scaled test set\n","print(\"Scaled test set accuracy: {:.2f}\".format(\n","    knn.score(X_test_scaled, y_test)))"],"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Scaled test set accuracy: 0.96\n"]}]},{"cell_type":"markdown","metadata":{"id":"THUjYQzN_S0Z"},"source":["### Effect using Standard Scaler: \n","We can see that accuracy has improved compared to the non-scaled version, but we can infer that for this problem, Standard Scaler performs worse than MinMaxScaler."]},{"cell_type":"code","metadata":{"id":"jjzSafqk-Ina","executionInfo":{"status":"ok","timestamp":1648869321305,"user_tz":-360,"elapsed":49,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","\n","#instead of using .fit() and .transform() separately, we can use .fit_transform()\n","X_scaled_d = scaler.fit_transform(X_train)"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"id":"BMpuacp49del","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321305,"user_tz":-360,"elapsed":49,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"a8341bb8-9abd-404f-8913-e3926b1829b6"},"source":["# preprocessing using zero mean and unit variance scaling\n","from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","scaler.fit(X_train)\n","\n","X_train_scaled = scaler.transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","# learning an SVM on the scaled training data\n","knn.fit(X_train_scaled, y_train)\n","\n","# scoring on the scaled test set\n","print(\"KNN test accuracy: {:.2f}\".format(knn.score(X_test_scaled, y_test)))"],"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["KNN test accuracy: 0.95\n"]}]},{"cell_type":"markdown","metadata":{"id":"My5bgznkTfsV"},"source":["## Feature Engineering"]},{"cell_type":"markdown","metadata":{"id":"9tz87oUDTfsW"},"source":["### Encoding categorical variables - binary\n"]},{"cell_type":"code","metadata":{"id":"Ngz-ICV2TfsW","colab":{"base_uri":"https://localhost:8080/","height":336},"executionInfo":{"status":"ok","timestamp":1648869321306,"user_tz":-360,"elapsed":48,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"a09e36db-1349-4f0d-db6c-44344945e98f"},"source":["hiking = pd.read_json('/content/sample_data/hiking.json')\n","hiking.head()"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Prop_ID                     Name  \\\n","0    B057  Salt Marsh Nature Trail   \n","1    B073                Lullwater   \n","2    B073                  Midwood   \n","3    B073                Peninsula   \n","4    B073                Waterfall   \n","\n","                                            Location      Park_Name  \\\n","0  Enter behind the Salt Marsh Nature Center, loc...    Marine Park   \n","1  Enter Park at Lincoln Road and Ocean Avenue en...  Prospect Park   \n","2  Enter Park at Lincoln Road and Ocean Avenue en...  Prospect Park   \n","3  Enter Park at Lincoln Road and Ocean Avenue en...  Prospect Park   \n","4  Enter Park at Lincoln Road and Ocean Avenue en...  Prospect Park   \n","\n","       Length Difficulty                                      Other_Details  \\\n","0   0.8 miles       None  <p>The first half of this mile-long trail foll...   \n","1    1.0 mile       Easy  Explore the Lullwater to see how nature thrive...   \n","2  0.75 miles       Easy  Step back in time with a walk through Brooklyn...   \n","3   0.5 miles       Easy  Discover how the Peninsula has changed over th...   \n","4   0.5 miles       Easy  Trace the source of the Lake on the Waterfall ...   \n","\n","  Accessible Limited_Access  lat  lon  \n","0          Y              N  NaN  NaN  \n","1          N              N  NaN  NaN  \n","2          N              N  NaN  NaN  \n","3          N              N  NaN  NaN  \n","4          N              N  NaN  NaN  "],"text/html":["\n","  <div id=\"df-310b6b50-fe40-4962-9516-5eb9254541c6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Prop_ID</th>\n","      <th>Name</th>\n","      <th>Location</th>\n","      <th>Park_Name</th>\n","      <th>Length</th>\n","      <th>Difficulty</th>\n","      <th>Other_Details</th>\n","      <th>Accessible</th>\n","      <th>Limited_Access</th>\n","      <th>lat</th>\n","      <th>lon</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>B057</td>\n","      <td>Salt Marsh Nature Trail</td>\n","      <td>Enter behind the Salt Marsh Nature Center, loc...</td>\n","      <td>Marine Park</td>\n","      <td>0.8 miles</td>\n","      <td>None</td>\n","      <td>&lt;p&gt;The first half of this mile-long trail foll...</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>B073</td>\n","      <td>Lullwater</td>\n","      <td>Enter Park at Lincoln Road and Ocean Avenue en...</td>\n","      <td>Prospect Park</td>\n","      <td>1.0 mile</td>\n","      <td>Easy</td>\n","      <td>Explore the Lullwater to see how nature thrive...</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>B073</td>\n","      <td>Midwood</td>\n","      <td>Enter Park at Lincoln Road and Ocean Avenue en...</td>\n","      <td>Prospect Park</td>\n","      <td>0.75 miles</td>\n","      <td>Easy</td>\n","      <td>Step back in time with a walk through Brooklyn...</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>B073</td>\n","      <td>Peninsula</td>\n","      <td>Enter Park at Lincoln Road and Ocean Avenue en...</td>\n","      <td>Prospect Park</td>\n","      <td>0.5 miles</td>\n","      <td>Easy</td>\n","      <td>Discover how the Peninsula has changed over th...</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>B073</td>\n","      <td>Waterfall</td>\n","      <td>Enter Park at Lincoln Road and Ocean Avenue en...</td>\n","      <td>Prospect Park</td>\n","      <td>0.5 miles</td>\n","      <td>Easy</td>\n","      <td>Trace the source of the Lake on the Waterfall ...</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-310b6b50-fe40-4962-9516-5eb9254541c6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-310b6b50-fe40-4962-9516-5eb9254541c6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-310b6b50-fe40-4962-9516-5eb9254541c6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"M7b_JOhNWgXy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321307,"user_tz":-360,"elapsed":49,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"4c1bffbb-878d-4ee5-889b-96db09826b17"},"source":["hiking.info()"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 33 entries, 0 to 32\n","Data columns (total 11 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   Prop_ID         33 non-null     object \n"," 1   Name            33 non-null     object \n"," 2   Location        33 non-null     object \n"," 3   Park_Name       33 non-null     object \n"," 4   Length          29 non-null     object \n"," 5   Difficulty      27 non-null     object \n"," 6   Other_Details   31 non-null     object \n"," 7   Accessible      33 non-null     object \n"," 8   Limited_Access  33 non-null     object \n"," 9   lat             0 non-null      float64\n"," 10  lon             0 non-null      float64\n","dtypes: float64(2), object(9)\n","memory usage: 3.0+ KB\n"]}]},{"cell_type":"code","metadata":{"id":"qFYXdTSpshQX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321986,"user_tz":-360,"elapsed":50,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"fb4b276a-fc23-4f4f-b827-08ee3f4bc323"},"source":["hiking['Accessible'].unique()"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Y', 'N'], dtype=object)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"1ip2DAQ5Tfsa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321988,"user_tz":-360,"elapsed":50,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"c623953f-4678-4a1b-cee1-e581a5795870"},"source":["from sklearn.preprocessing import LabelEncoder\n","\n","# Set up the LabelEncoder object\n","enc = LabelEncoder()\n","\n","# Apply the encoding to the \"Accessible\" column\n","hiking['Accessible_enc'] = enc.fit_transform(hiking['Accessible'])\n","\n","# Compare the two columns\n","print(hiking[['Accessible', 'Accessible_enc']].head())"],"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["  Accessible  Accessible_enc\n","0          Y               1\n","1          N               0\n","2          N               0\n","3          N               0\n","4          N               0\n"]}]},{"cell_type":"markdown","metadata":{"id":"__K7zf64Dc8s"},"source":["We may also encode/map a certain class to a specific code (e.g 0/1/2) by using the `map()` function. "]},{"cell_type":"code","metadata":{"id":"nUC3A0b3D-BC","executionInfo":{"status":"ok","timestamp":1648869321988,"user_tz":-360,"elapsed":47,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["hiking['Accessible'] = hiking['Accessible'].map({'good':2,'bad':0,'average':1}) "],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"id":"8zfdrX8kujYK","colab":{"base_uri":"https://localhost:8080/","height":515},"executionInfo":{"status":"ok","timestamp":1648869321990,"user_tz":-360,"elapsed":48,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"8a5585a3-b867-49dd-c7f3-6397e387037c"},"source":["volunteer = pd.read_csv('/content/sample_data/volunteer_opportunities.csv')\n","volunteer.head(3)"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   opportunity_id  content_id  vol_requests  event_time  \\\n","0            4996       37004            50           0   \n","1            5008       37036             2           0   \n","2            5016       37143            20           0   \n","\n","                                               title  hits  \\\n","0  Volunteers Needed For Rise Up & Stay Put! Home...   737   \n","1                                       Web designer    22   \n","2      Urban Adventures - Ice Skating at Lasker Rink    62   \n","\n","                                             summary is_priority  category_id  \\\n","0  Building on successful events last summer and ...         NaN          NaN   \n","1             Build a website for an Afghan business         NaN          1.0   \n","2  Please join us and the students from Mott Hall...         NaN          1.0   \n","\n","               category_desc  ...     end_date_date    status Latitude  \\\n","0                        NaN  ...      July 30 2011  approved      NaN   \n","1  Strengthening Communities  ...  February 01 2011  approved      NaN   \n","2  Strengthening Communities  ...   January 29 2011  approved      NaN   \n","\n","   Longitude  Community Board Community Council  Census Tract  BIN  BBL NTA  \n","0        NaN              NaN                NaN          NaN  NaN  NaN NaN  \n","1        NaN              NaN                NaN          NaN  NaN  NaN NaN  \n","2        NaN              NaN                NaN          NaN  NaN  NaN NaN  \n","\n","[3 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-4d44b3ca-db7b-42cb-af68-329455be8e70\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>opportunity_id</th>\n","      <th>content_id</th>\n","      <th>vol_requests</th>\n","      <th>event_time</th>\n","      <th>title</th>\n","      <th>hits</th>\n","      <th>summary</th>\n","      <th>is_priority</th>\n","      <th>category_id</th>\n","      <th>category_desc</th>\n","      <th>...</th>\n","      <th>end_date_date</th>\n","      <th>status</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","      <th>Community Board</th>\n","      <th>Community Council</th>\n","      <th>Census Tract</th>\n","      <th>BIN</th>\n","      <th>BBL</th>\n","      <th>NTA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4996</td>\n","      <td>37004</td>\n","      <td>50</td>\n","      <td>0</td>\n","      <td>Volunteers Needed For Rise Up &amp; Stay Put! Home...</td>\n","      <td>737</td>\n","      <td>Building on successful events last summer and ...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>July 30 2011</td>\n","      <td>approved</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5008</td>\n","      <td>37036</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>Web designer</td>\n","      <td>22</td>\n","      <td>Build a website for an Afghan business</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>Strengthening Communities</td>\n","      <td>...</td>\n","      <td>February 01 2011</td>\n","      <td>approved</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5016</td>\n","      <td>37143</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>Urban Adventures - Ice Skating at Lasker Rink</td>\n","      <td>62</td>\n","      <td>Please join us and the students from Mott Hall...</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>Strengthening Communities</td>\n","      <td>...</td>\n","      <td>January 29 2011</td>\n","      <td>approved</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 35 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d44b3ca-db7b-42cb-af68-329455be8e70')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4d44b3ca-db7b-42cb-af68-329455be8e70 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4d44b3ca-db7b-42cb-af68-329455be8e70');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"SNCEXjltTfsf"},"source":["### Encoding categorical variables - one-hot encoding"]},{"cell_type":"code","metadata":{"id":"adGWJrRWu3c_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321991,"user_tz":-360,"elapsed":48,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"5e533841-2375-4018-cc89-b993f92261cf"},"source":["volunteer.info()"],"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 665 entries, 0 to 664\n","Data columns (total 35 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   opportunity_id      665 non-null    int64  \n"," 1   content_id          665 non-null    int64  \n"," 2   vol_requests        665 non-null    int64  \n"," 3   event_time          665 non-null    int64  \n"," 4   title               665 non-null    object \n"," 5   hits                665 non-null    int64  \n"," 6   summary             665 non-null    object \n"," 7   is_priority         62 non-null     object \n"," 8   category_id         617 non-null    float64\n"," 9   category_desc       617 non-null    object \n"," 10  amsl                0 non-null      float64\n"," 11  amsl_unit           0 non-null      float64\n"," 12  org_title           665 non-null    object \n"," 13  org_content_id      665 non-null    int64  \n"," 14  addresses_count     665 non-null    int64  \n"," 15  locality            595 non-null    object \n"," 16  region              665 non-null    object \n"," 17  postalcode          659 non-null    float64\n"," 18  primary_loc         0 non-null      float64\n"," 19  display_url         665 non-null    object \n"," 20  recurrence_type     665 non-null    object \n"," 21  hours               665 non-null    int64  \n"," 22  created_date        665 non-null    object \n"," 23  last_modified_date  665 non-null    object \n"," 24  start_date_date     665 non-null    object \n"," 25  end_date_date       665 non-null    object \n"," 26  status              665 non-null    object \n"," 27  Latitude            0 non-null      float64\n"," 28  Longitude           0 non-null      float64\n"," 29  Community Board     0 non-null      float64\n"," 30  Community Council   0 non-null      float64\n"," 31  Census Tract        0 non-null      float64\n"," 32  BIN                 0 non-null      float64\n"," 33  BBL                 0 non-null      float64\n"," 34  NTA                 0 non-null      float64\n","dtypes: float64(13), int64(8), object(14)\n","memory usage: 182.0+ KB\n"]}]},{"cell_type":"code","metadata":{"id":"NyPtPelkuzdb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321991,"user_tz":-360,"elapsed":45,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"61a8fa7f-fc06-4e87-aa6d-c59cd9d83ab8"},"source":["volunteer['category_desc'].unique()"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([nan, 'Strengthening Communities', 'Environment',\n","       'Helping Neighbors in Need', 'Health', 'Education',\n","       'Emergency Preparedness'], dtype=object)"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"9MfAn127Tfsg","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1648869321992,"user_tz":-360,"elapsed":44,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"a2841bfa-e2e6-488a-be02-700d1b033366"},"source":["# Transform the category_desc column\n","category_enc = pd.get_dummies(volunteer['category_desc'])\n","\n","# Take a look at the encoded columns\n","category_enc.head()"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Education  Emergency Preparedness  Environment  Health  \\\n","0          0                       0            0       0   \n","1          0                       0            0       0   \n","2          0                       0            0       0   \n","3          0                       0            0       0   \n","4          0                       0            1       0   \n","\n","   Helping Neighbors in Need  Strengthening Communities  \n","0                          0                          0  \n","1                          0                          1  \n","2                          0                          1  \n","3                          0                          1  \n","4                          0                          0  "],"text/html":["\n","  <div id=\"df-34a2276f-4b4c-4c6a-95b2-e8e3d82f8489\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Education</th>\n","      <th>Emergency Preparedness</th>\n","      <th>Environment</th>\n","      <th>Health</th>\n","      <th>Helping Neighbors in Need</th>\n","      <th>Strengthening Communities</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34a2276f-4b4c-4c6a-95b2-e8e3d82f8489')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-34a2276f-4b4c-4c6a-95b2-e8e3d82f8489 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-34a2276f-4b4c-4c6a-95b2-e8e3d82f8489');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"code","metadata":{"id":"smExDPZxyNKx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321993,"user_tz":-360,"elapsed":44,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"fcc40dae-2d0e-47cd-d33d-e1203f98fa91"},"source":["volunteer['category_desc'].head()"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0                          NaN\n","1    Strengthening Communities\n","2    Strengthening Communities\n","3    Strengthening Communities\n","4                  Environment\n","Name: category_desc, dtype: object"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","metadata":{"id":"4UkVypd11JW-"},"source":["##Feature Engineering"]},{"cell_type":"markdown","metadata":{"id":"4O_bdBq3qaAB"},"source":["### Engineering numerical features - by taking an average\n","\n","Suppose we have multiple features each of which contains time taken for each runner to complete a lap. We can reduce the dimensionality of our dataset (reduce the number of features) by averaging(mean) the time taken of each run."]},{"cell_type":"code","metadata":{"id":"MzqqMxxTqeh1","executionInfo":{"status":"ok","timestamp":1648869321994,"user_tz":-360,"elapsed":43,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["running_times_5k = pd.DataFrame([['Sue', 20.1, 18.5, 19.6, 20.3, 18.3], ['Mark', 16.5, 17.1, 16.9, 17.6, 17.3], ['Sean', 23.5, 25.1, 25.2, 24.6, 23.9], ['Erin', 21.7, 21.1, 20.9, 22.1, 22.2], ['Jenny', 25.8, 27.1, 26.1, 26.7, 26.9], ['Russell', 30.9, 29.6, 31.4, 30.4, 29.9]])\n"],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"id":"A_7HWiUcqvz9","executionInfo":{"status":"ok","timestamp":1648869321995,"user_tz":-360,"elapsed":44,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["running_times_5k.columns =  ['name', 'run1', 'run2', 'run3', 'run4', 'run5']"],"execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"id":"_nwf3WPJzjhX","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1648869321995,"user_tz":-360,"elapsed":44,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"4a4f5fd4-46a3-4077-91ed-532ed0ca6afb"},"source":["running_times_5k"],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      name  run1  run2  run3  run4  run5\n","0      Sue  20.1  18.5  19.6  20.3  18.3\n","1     Mark  16.5  17.1  16.9  17.6  17.3\n","2     Sean  23.5  25.1  25.2  24.6  23.9\n","3     Erin  21.7  21.1  20.9  22.1  22.2\n","4    Jenny  25.8  27.1  26.1  26.7  26.9\n","5  Russell  30.9  29.6  31.4  30.4  29.9"],"text/html":["\n","  <div id=\"df-dbdc3158-5f98-4166-8c6c-12e7c730ec59\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>run1</th>\n","      <th>run2</th>\n","      <th>run3</th>\n","      <th>run4</th>\n","      <th>run5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Sue</td>\n","      <td>20.1</td>\n","      <td>18.5</td>\n","      <td>19.6</td>\n","      <td>20.3</td>\n","      <td>18.3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Mark</td>\n","      <td>16.5</td>\n","      <td>17.1</td>\n","      <td>16.9</td>\n","      <td>17.6</td>\n","      <td>17.3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sean</td>\n","      <td>23.5</td>\n","      <td>25.1</td>\n","      <td>25.2</td>\n","      <td>24.6</td>\n","      <td>23.9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Erin</td>\n","      <td>21.7</td>\n","      <td>21.1</td>\n","      <td>20.9</td>\n","      <td>22.1</td>\n","      <td>22.2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jenny</td>\n","      <td>25.8</td>\n","      <td>27.1</td>\n","      <td>26.1</td>\n","      <td>26.7</td>\n","      <td>26.9</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Russell</td>\n","      <td>30.9</td>\n","      <td>29.6</td>\n","      <td>31.4</td>\n","      <td>30.4</td>\n","      <td>29.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dbdc3158-5f98-4166-8c6c-12e7c730ec59')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dbdc3158-5f98-4166-8c6c-12e7c730ec59 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dbdc3158-5f98-4166-8c6c-12e7c730ec59');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":37}]},{"cell_type":"code","metadata":{"id":"1eBFPPW4qkue","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321996,"user_tz":-360,"elapsed":44,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"e33e5653-6c54-4c08-a291-d0a6a386a23f"},"source":["# Create a list of the columns to average\n","run_columns = [\"run1\", \"run2\", \"run3\", \"run4\", \"run5\"]\n","\n","# Use apply to create a mean column\n","running_times_5k[\"mean\"] = running_times_5k.apply(lambda row: row[run_columns].mean(), axis=1)\n","\n","# Take a look at the results\n","print(running_times_5k)"],"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["      name  run1  run2  run3  run4  run5   mean\n","0      Sue  20.1  18.5  19.6  20.3  18.3  19.36\n","1     Mark  16.5  17.1  16.9  17.6  17.3  17.08\n","2     Sean  23.5  25.1  25.2  24.6  23.9  24.46\n","3     Erin  21.7  21.1  20.9  22.1  22.2  21.60\n","4    Jenny  25.8  27.1  26.1  26.7  26.9  26.52\n","5  Russell  30.9  29.6  31.4  30.4  29.9  30.44\n"]}]},{"cell_type":"markdown","metadata":{"id":"GndB_JOYTfss"},"source":["### Engineering numerical features - datetime\n","\n","We are extracting the start_date_month from the `date_time` format which we can use later to input into our learner/model/algorithm. This feature will be much more meaningful for the learner compared to the `date_time` format. "]},{"cell_type":"code","metadata":{"id":"gkQQ7qtl3kiP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648869321998,"user_tz":-360,"elapsed":44,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"01d664c3-40f2-47d2-dda8-aad4c079bc8d"},"source":["volunteer[\"start_date_date\"]"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0          July 30 2011\n","1      February 01 2011\n","2       January 29 2011\n","3      February 14 2011\n","4      February 05 2011\n","             ...       \n","660      August 16 2011\n","661       April 13 2011\n","662        July 20 2011\n","663        June 01 2011\n","664        July 07 2011\n","Name: start_date_date, Length: 665, dtype: object"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"h_qSQbTLTfst","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1648869321998,"user_tz":-360,"elapsed":42,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"4b08583b-f301-4317-e7f5-ce4116e252dc"},"source":["# First, convert string column to date column\n","volunteer[\"start_date_converted\"] = pd.to_datetime(volunteer[\"start_date_date\"])\n","\n","# Extract just the month from the converted column\n","volunteer[\"start_date_month\"] = volunteer[\"start_date_converted\"].apply(lambda row: row.month)\n","\n","# Take a look at the converted and new month columns\n","volunteer[['start_date_converted', 'start_date_month']].head()"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  start_date_converted  start_date_month\n","0           2011-07-30                 7\n","1           2011-02-01                 2\n","2           2011-01-29                 1\n","3           2011-02-14                 2\n","4           2011-02-05                 2"],"text/html":["\n","  <div id=\"df-06869f4c-661f-4d69-9b32-517101820f2c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_date_converted</th>\n","      <th>start_date_month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011-07-30</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011-02-01</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011-01-29</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011-02-14</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011-02-05</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06869f4c-661f-4d69-9b32-517101820f2c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-06869f4c-661f-4d69-9b32-517101820f2c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-06869f4c-661f-4d69-9b32-517101820f2c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","metadata":{"id":"hjQMrkorTfs9"},"source":["## Feature Selection"]},{"cell_type":"markdown","metadata":{"id":"762jMLqRTfs_"},"source":["### Selecting relevant features\n","\n","Sometimes certain circumstances arise that we have a lot of features in our dataset, but from our prior/domain knowledge we know that certain features might not be too important. In such cases we may want to drop those irrelevant features.\n","\n"]},{"cell_type":"code","metadata":{"id":"wG2LXzDXTftA","colab":{"base_uri":"https://localhost:8080/","height":734},"executionInfo":{"status":"ok","timestamp":1648869321999,"user_tz":-360,"elapsed":42,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"59e391e7-6932-4bf1-f1e3-0af360f7c424"},"source":["# Create a list of redundant column names to drop\n","to_drop = [\"category_desc\", \"created_date\", \"locality\", \"region\", \"vol_requests\"]\n","\n","# Drop those columns from the dataset\n","volunteer_subset = volunteer.drop(to_drop, axis=1)\n","\n","# Print out the head of the new dataset\n","volunteer_subset.head()"],"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   opportunity_id  content_id  event_time  \\\n","0            4996       37004           0   \n","1            5008       37036           0   \n","2            5016       37143           0   \n","3            5022       37237           0   \n","4            5055       37425           0   \n","\n","                                               title  hits  \\\n","0  Volunteers Needed For Rise Up & Stay Put! Home...   737   \n","1                                       Web designer    22   \n","2      Urban Adventures - Ice Skating at Lasker Rink    62   \n","3  Fight global hunger and support women farmers ...    14   \n","4                                      Stop 'N' Swap    31   \n","\n","                                             summary is_priority  category_id  \\\n","0  Building on successful events last summer and ...         NaN          NaN   \n","1             Build a website for an Afghan business         NaN          1.0   \n","2  Please join us and the students from Mott Hall...         NaN          1.0   \n","3  The Oxfam Action Corps is a group of dedicated...         NaN          1.0   \n","4  Stop 'N' Swap reduces NYC's waste by finding n...         NaN          4.0   \n","\n","   amsl  amsl_unit  ... Latitude  Longitude  Community Board  \\\n","0   NaN        NaN  ...      NaN        NaN              NaN   \n","1   NaN        NaN  ...      NaN        NaN              NaN   \n","2   NaN        NaN  ...      NaN        NaN              NaN   \n","3   NaN        NaN  ...      NaN        NaN              NaN   \n","4   NaN        NaN  ...      NaN        NaN              NaN   \n","\n","   Community Council   Census Tract BIN BBL  NTA start_date_converted  \\\n","0                 NaN           NaN NaN NaN  NaN           2011-07-30   \n","1                 NaN           NaN NaN NaN  NaN           2011-02-01   \n","2                 NaN           NaN NaN NaN  NaN           2011-01-29   \n","3                 NaN           NaN NaN NaN  NaN           2011-02-14   \n","4                 NaN           NaN NaN NaN  NaN           2011-02-05   \n","\n","  start_date_month  \n","0                7  \n","1                2  \n","2                1  \n","3                2  \n","4                2  \n","\n","[5 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-00fb439e-0969-4fc6-8e95-1c5b82762e24\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>opportunity_id</th>\n","      <th>content_id</th>\n","      <th>event_time</th>\n","      <th>title</th>\n","      <th>hits</th>\n","      <th>summary</th>\n","      <th>is_priority</th>\n","      <th>category_id</th>\n","      <th>amsl</th>\n","      <th>amsl_unit</th>\n","      <th>...</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","      <th>Community Board</th>\n","      <th>Community Council</th>\n","      <th>Census Tract</th>\n","      <th>BIN</th>\n","      <th>BBL</th>\n","      <th>NTA</th>\n","      <th>start_date_converted</th>\n","      <th>start_date_month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4996</td>\n","      <td>37004</td>\n","      <td>0</td>\n","      <td>Volunteers Needed For Rise Up &amp; Stay Put! Home...</td>\n","      <td>737</td>\n","      <td>Building on successful events last summer and ...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2011-07-30</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5008</td>\n","      <td>37036</td>\n","      <td>0</td>\n","      <td>Web designer</td>\n","      <td>22</td>\n","      <td>Build a website for an Afghan business</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2011-02-01</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5016</td>\n","      <td>37143</td>\n","      <td>0</td>\n","      <td>Urban Adventures - Ice Skating at Lasker Rink</td>\n","      <td>62</td>\n","      <td>Please join us and the students from Mott Hall...</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2011-01-29</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5022</td>\n","      <td>37237</td>\n","      <td>0</td>\n","      <td>Fight global hunger and support women farmers ...</td>\n","      <td>14</td>\n","      <td>The Oxfam Action Corps is a group of dedicated...</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2011-02-14</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5055</td>\n","      <td>37425</td>\n","      <td>0</td>\n","      <td>Stop 'N' Swap</td>\n","      <td>31</td>\n","      <td>Stop 'N' Swap reduces NYC's waste by finding n...</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2011-02-05</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 32 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00fb439e-0969-4fc6-8e95-1c5b82762e24')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-00fb439e-0969-4fc6-8e95-1c5b82762e24 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-00fb439e-0969-4fc6-8e95-1c5b82762e24');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","metadata":{"id":"ZjiT5OVhTftE"},"source":["### Checking for correlated features\n","\n","We may use the following heatmap to find out the correlation between each of the features in a dataset. If a certain feature is highly correlated with more than one feature, we may choose to drop that feature (in this case it is *flavanoids*) because it will affect our model in a similar way as the other two features (and thus will prove to redundant). Correlation between two features may be found using the color gradient shown on the right."]},{"cell_type":"code","metadata":{"id":"cwJFgFcKM9hM","executionInfo":{"status":"ok","timestamp":1648869321999,"user_tz":-360,"elapsed":41,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["from sklearn.datasets import load_wine\n","\n","wine = load_wine()\n","wine_df = pd.DataFrame( wine['data'], columns=wine['feature_names'])"],"execution_count":42,"outputs":[]},{"cell_type":"code","metadata":{"id":"jICUTyA3Od1P","colab":{"base_uri":"https://localhost:8080/","height":270},"executionInfo":{"status":"ok","timestamp":1648869322000,"user_tz":-360,"elapsed":42,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"354cf7ab-a154-45d7-be54-0be5e7c24988"},"source":["wine_df.head()"],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   alcohol  malic_acid   ash  alcalinity_of_ash  magnesium  total_phenols  \\\n","0    14.23        1.71  2.43               15.6      127.0           2.80   \n","1    13.20        1.78  2.14               11.2      100.0           2.65   \n","2    13.16        2.36  2.67               18.6      101.0           2.80   \n","3    14.37        1.95  2.50               16.8      113.0           3.85   \n","4    13.24        2.59  2.87               21.0      118.0           2.80   \n","\n","   flavanoids  nonflavanoid_phenols  proanthocyanins  color_intensity   hue  \\\n","0        3.06                  0.28             2.29             5.64  1.04   \n","1        2.76                  0.26             1.28             4.38  1.05   \n","2        3.24                  0.30             2.81             5.68  1.03   \n","3        3.49                  0.24             2.18             7.80  0.86   \n","4        2.69                  0.39             1.82             4.32  1.04   \n","\n","   od280/od315_of_diluted_wines  proline  \n","0                          3.92   1065.0  \n","1                          3.40   1050.0  \n","2                          3.17   1185.0  \n","3                          3.45   1480.0  \n","4                          2.93    735.0  "],"text/html":["\n","  <div id=\"df-47a7df06-322c-46ea-a218-acc13362d29c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alcohol</th>\n","      <th>malic_acid</th>\n","      <th>ash</th>\n","      <th>alcalinity_of_ash</th>\n","      <th>magnesium</th>\n","      <th>total_phenols</th>\n","      <th>flavanoids</th>\n","      <th>nonflavanoid_phenols</th>\n","      <th>proanthocyanins</th>\n","      <th>color_intensity</th>\n","      <th>hue</th>\n","      <th>od280/od315_of_diluted_wines</th>\n","      <th>proline</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>14.23</td>\n","      <td>1.71</td>\n","      <td>2.43</td>\n","      <td>15.6</td>\n","      <td>127.0</td>\n","      <td>2.80</td>\n","      <td>3.06</td>\n","      <td>0.28</td>\n","      <td>2.29</td>\n","      <td>5.64</td>\n","      <td>1.04</td>\n","      <td>3.92</td>\n","      <td>1065.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13.20</td>\n","      <td>1.78</td>\n","      <td>2.14</td>\n","      <td>11.2</td>\n","      <td>100.0</td>\n","      <td>2.65</td>\n","      <td>2.76</td>\n","      <td>0.26</td>\n","      <td>1.28</td>\n","      <td>4.38</td>\n","      <td>1.05</td>\n","      <td>3.40</td>\n","      <td>1050.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>13.16</td>\n","      <td>2.36</td>\n","      <td>2.67</td>\n","      <td>18.6</td>\n","      <td>101.0</td>\n","      <td>2.80</td>\n","      <td>3.24</td>\n","      <td>0.30</td>\n","      <td>2.81</td>\n","      <td>5.68</td>\n","      <td>1.03</td>\n","      <td>3.17</td>\n","      <td>1185.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14.37</td>\n","      <td>1.95</td>\n","      <td>2.50</td>\n","      <td>16.8</td>\n","      <td>113.0</td>\n","      <td>3.85</td>\n","      <td>3.49</td>\n","      <td>0.24</td>\n","      <td>2.18</td>\n","      <td>7.80</td>\n","      <td>0.86</td>\n","      <td>3.45</td>\n","      <td>1480.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13.24</td>\n","      <td>2.59</td>\n","      <td>2.87</td>\n","      <td>21.0</td>\n","      <td>118.0</td>\n","      <td>2.80</td>\n","      <td>2.69</td>\n","      <td>0.39</td>\n","      <td>1.82</td>\n","      <td>4.32</td>\n","      <td>1.04</td>\n","      <td>2.93</td>\n","      <td>735.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47a7df06-322c-46ea-a218-acc13362d29c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-47a7df06-322c-46ea-a218-acc13362d29c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-47a7df06-322c-46ea-a218-acc13362d29c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"zbAXIHtA5V_C","colab":{"base_uri":"https://localhost:8080/","height":521},"executionInfo":{"status":"ok","timestamp":1648869322000,"user_tz":-360,"elapsed":41,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"2e7373fd-8ec1-4003-92f2-3e3fc42661d5"},"source":["wine_corr = wine_df.corr()\n","wine_corr"],"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                               alcohol  malic_acid       ash  \\\n","alcohol                       1.000000    0.094397  0.211545   \n","malic_acid                    0.094397    1.000000  0.164045   \n","ash                           0.211545    0.164045  1.000000   \n","alcalinity_of_ash            -0.310235    0.288500  0.443367   \n","magnesium                     0.270798   -0.054575  0.286587   \n","total_phenols                 0.289101   -0.335167  0.128980   \n","flavanoids                    0.236815   -0.411007  0.115077   \n","nonflavanoid_phenols         -0.155929    0.292977  0.186230   \n","proanthocyanins               0.136698   -0.220746  0.009652   \n","color_intensity               0.546364    0.248985  0.258887   \n","hue                          -0.071747   -0.561296 -0.074667   \n","od280/od315_of_diluted_wines  0.072343   -0.368710  0.003911   \n","proline                       0.643720   -0.192011  0.223626   \n","\n","                              alcalinity_of_ash  magnesium  total_phenols  \\\n","alcohol                               -0.310235   0.270798       0.289101   \n","malic_acid                             0.288500  -0.054575      -0.335167   \n","ash                                    0.443367   0.286587       0.128980   \n","alcalinity_of_ash                      1.000000  -0.083333      -0.321113   \n","magnesium                             -0.083333   1.000000       0.214401   \n","total_phenols                         -0.321113   0.214401       1.000000   \n","flavanoids                            -0.351370   0.195784       0.864564   \n","nonflavanoid_phenols                   0.361922  -0.256294      -0.449935   \n","proanthocyanins                       -0.197327   0.236441       0.612413   \n","color_intensity                        0.018732   0.199950      -0.055136   \n","hue                                   -0.273955   0.055398       0.433681   \n","od280/od315_of_diluted_wines          -0.276769   0.066004       0.699949   \n","proline                               -0.440597   0.393351       0.498115   \n","\n","                              flavanoids  nonflavanoid_phenols  \\\n","alcohol                         0.236815             -0.155929   \n","malic_acid                     -0.411007              0.292977   \n","ash                             0.115077              0.186230   \n","alcalinity_of_ash              -0.351370              0.361922   \n","magnesium                       0.195784             -0.256294   \n","total_phenols                   0.864564             -0.449935   \n","flavanoids                      1.000000             -0.537900   \n","nonflavanoid_phenols           -0.537900              1.000000   \n","proanthocyanins                 0.652692             -0.365845   \n","color_intensity                -0.172379              0.139057   \n","hue                             0.543479             -0.262640   \n","od280/od315_of_diluted_wines    0.787194             -0.503270   \n","proline                         0.494193             -0.311385   \n","\n","                              proanthocyanins  color_intensity       hue  \\\n","alcohol                              0.136698         0.546364 -0.071747   \n","malic_acid                          -0.220746         0.248985 -0.561296   \n","ash                                  0.009652         0.258887 -0.074667   \n","alcalinity_of_ash                   -0.197327         0.018732 -0.273955   \n","magnesium                            0.236441         0.199950  0.055398   \n","total_phenols                        0.612413        -0.055136  0.433681   \n","flavanoids                           0.652692        -0.172379  0.543479   \n","nonflavanoid_phenols                -0.365845         0.139057 -0.262640   \n","proanthocyanins                      1.000000        -0.025250  0.295544   \n","color_intensity                     -0.025250         1.000000 -0.521813   \n","hue                                  0.295544        -0.521813  1.000000   \n","od280/od315_of_diluted_wines         0.519067        -0.428815  0.565468   \n","proline                              0.330417         0.316100  0.236183   \n","\n","                              od280/od315_of_diluted_wines   proline  \n","alcohol                                           0.072343  0.643720  \n","malic_acid                                       -0.368710 -0.192011  \n","ash                                               0.003911  0.223626  \n","alcalinity_of_ash                                -0.276769 -0.440597  \n","magnesium                                         0.066004  0.393351  \n","total_phenols                                     0.699949  0.498115  \n","flavanoids                                        0.787194  0.494193  \n","nonflavanoid_phenols                             -0.503270 -0.311385  \n","proanthocyanins                                   0.519067  0.330417  \n","color_intensity                                  -0.428815  0.316100  \n","hue                                               0.565468  0.236183  \n","od280/od315_of_diluted_wines                      1.000000  0.312761  \n","proline                                           0.312761  1.000000  "],"text/html":["\n","  <div id=\"df-0d0e3d82-90f8-4068-9382-792dab621f0c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alcohol</th>\n","      <th>malic_acid</th>\n","      <th>ash</th>\n","      <th>alcalinity_of_ash</th>\n","      <th>magnesium</th>\n","      <th>total_phenols</th>\n","      <th>flavanoids</th>\n","      <th>nonflavanoid_phenols</th>\n","      <th>proanthocyanins</th>\n","      <th>color_intensity</th>\n","      <th>hue</th>\n","      <th>od280/od315_of_diluted_wines</th>\n","      <th>proline</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>alcohol</th>\n","      <td>1.000000</td>\n","      <td>0.094397</td>\n","      <td>0.211545</td>\n","      <td>-0.310235</td>\n","      <td>0.270798</td>\n","      <td>0.289101</td>\n","      <td>0.236815</td>\n","      <td>-0.155929</td>\n","      <td>0.136698</td>\n","      <td>0.546364</td>\n","      <td>-0.071747</td>\n","      <td>0.072343</td>\n","      <td>0.643720</td>\n","    </tr>\n","    <tr>\n","      <th>malic_acid</th>\n","      <td>0.094397</td>\n","      <td>1.000000</td>\n","      <td>0.164045</td>\n","      <td>0.288500</td>\n","      <td>-0.054575</td>\n","      <td>-0.335167</td>\n","      <td>-0.411007</td>\n","      <td>0.292977</td>\n","      <td>-0.220746</td>\n","      <td>0.248985</td>\n","      <td>-0.561296</td>\n","      <td>-0.368710</td>\n","      <td>-0.192011</td>\n","    </tr>\n","    <tr>\n","      <th>ash</th>\n","      <td>0.211545</td>\n","      <td>0.164045</td>\n","      <td>1.000000</td>\n","      <td>0.443367</td>\n","      <td>0.286587</td>\n","      <td>0.128980</td>\n","      <td>0.115077</td>\n","      <td>0.186230</td>\n","      <td>0.009652</td>\n","      <td>0.258887</td>\n","      <td>-0.074667</td>\n","      <td>0.003911</td>\n","      <td>0.223626</td>\n","    </tr>\n","    <tr>\n","      <th>alcalinity_of_ash</th>\n","      <td>-0.310235</td>\n","      <td>0.288500</td>\n","      <td>0.443367</td>\n","      <td>1.000000</td>\n","      <td>-0.083333</td>\n","      <td>-0.321113</td>\n","      <td>-0.351370</td>\n","      <td>0.361922</td>\n","      <td>-0.197327</td>\n","      <td>0.018732</td>\n","      <td>-0.273955</td>\n","      <td>-0.276769</td>\n","      <td>-0.440597</td>\n","    </tr>\n","    <tr>\n","      <th>magnesium</th>\n","      <td>0.270798</td>\n","      <td>-0.054575</td>\n","      <td>0.286587</td>\n","      <td>-0.083333</td>\n","      <td>1.000000</td>\n","      <td>0.214401</td>\n","      <td>0.195784</td>\n","      <td>-0.256294</td>\n","      <td>0.236441</td>\n","      <td>0.199950</td>\n","      <td>0.055398</td>\n","      <td>0.066004</td>\n","      <td>0.393351</td>\n","    </tr>\n","    <tr>\n","      <th>total_phenols</th>\n","      <td>0.289101</td>\n","      <td>-0.335167</td>\n","      <td>0.128980</td>\n","      <td>-0.321113</td>\n","      <td>0.214401</td>\n","      <td>1.000000</td>\n","      <td>0.864564</td>\n","      <td>-0.449935</td>\n","      <td>0.612413</td>\n","      <td>-0.055136</td>\n","      <td>0.433681</td>\n","      <td>0.699949</td>\n","      <td>0.498115</td>\n","    </tr>\n","    <tr>\n","      <th>flavanoids</th>\n","      <td>0.236815</td>\n","      <td>-0.411007</td>\n","      <td>0.115077</td>\n","      <td>-0.351370</td>\n","      <td>0.195784</td>\n","      <td>0.864564</td>\n","      <td>1.000000</td>\n","      <td>-0.537900</td>\n","      <td>0.652692</td>\n","      <td>-0.172379</td>\n","      <td>0.543479</td>\n","      <td>0.787194</td>\n","      <td>0.494193</td>\n","    </tr>\n","    <tr>\n","      <th>nonflavanoid_phenols</th>\n","      <td>-0.155929</td>\n","      <td>0.292977</td>\n","      <td>0.186230</td>\n","      <td>0.361922</td>\n","      <td>-0.256294</td>\n","      <td>-0.449935</td>\n","      <td>-0.537900</td>\n","      <td>1.000000</td>\n","      <td>-0.365845</td>\n","      <td>0.139057</td>\n","      <td>-0.262640</td>\n","      <td>-0.503270</td>\n","      <td>-0.311385</td>\n","    </tr>\n","    <tr>\n","      <th>proanthocyanins</th>\n","      <td>0.136698</td>\n","      <td>-0.220746</td>\n","      <td>0.009652</td>\n","      <td>-0.197327</td>\n","      <td>0.236441</td>\n","      <td>0.612413</td>\n","      <td>0.652692</td>\n","      <td>-0.365845</td>\n","      <td>1.000000</td>\n","      <td>-0.025250</td>\n","      <td>0.295544</td>\n","      <td>0.519067</td>\n","      <td>0.330417</td>\n","    </tr>\n","    <tr>\n","      <th>color_intensity</th>\n","      <td>0.546364</td>\n","      <td>0.248985</td>\n","      <td>0.258887</td>\n","      <td>0.018732</td>\n","      <td>0.199950</td>\n","      <td>-0.055136</td>\n","      <td>-0.172379</td>\n","      <td>0.139057</td>\n","      <td>-0.025250</td>\n","      <td>1.000000</td>\n","      <td>-0.521813</td>\n","      <td>-0.428815</td>\n","      <td>0.316100</td>\n","    </tr>\n","    <tr>\n","      <th>hue</th>\n","      <td>-0.071747</td>\n","      <td>-0.561296</td>\n","      <td>-0.074667</td>\n","      <td>-0.273955</td>\n","      <td>0.055398</td>\n","      <td>0.433681</td>\n","      <td>0.543479</td>\n","      <td>-0.262640</td>\n","      <td>0.295544</td>\n","      <td>-0.521813</td>\n","      <td>1.000000</td>\n","      <td>0.565468</td>\n","      <td>0.236183</td>\n","    </tr>\n","    <tr>\n","      <th>od280/od315_of_diluted_wines</th>\n","      <td>0.072343</td>\n","      <td>-0.368710</td>\n","      <td>0.003911</td>\n","      <td>-0.276769</td>\n","      <td>0.066004</td>\n","      <td>0.699949</td>\n","      <td>0.787194</td>\n","      <td>-0.503270</td>\n","      <td>0.519067</td>\n","      <td>-0.428815</td>\n","      <td>0.565468</td>\n","      <td>1.000000</td>\n","      <td>0.312761</td>\n","    </tr>\n","    <tr>\n","      <th>proline</th>\n","      <td>0.643720</td>\n","      <td>-0.192011</td>\n","      <td>0.223626</td>\n","      <td>-0.440597</td>\n","      <td>0.393351</td>\n","      <td>0.498115</td>\n","      <td>0.494193</td>\n","      <td>-0.311385</td>\n","      <td>0.330417</td>\n","      <td>0.316100</td>\n","      <td>0.236183</td>\n","      <td>0.312761</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d0e3d82-90f8-4068-9382-792dab621f0c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0d0e3d82-90f8-4068-9382-792dab621f0c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0d0e3d82-90f8-4068-9382-792dab621f0c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"7xQH6KiQTftH","colab":{"base_uri":"https://localhost:8080/","height":432},"executionInfo":{"status":"ok","timestamp":1648869322665,"user_tz":-360,"elapsed":705,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}},"outputId":"545dd20c-39ee-4364-bbdc-9bce4e13875a"},"source":["import seaborn as sns\n","\n","sns.heatmap(wine_corr, cmap = 'YlGnBu')"],"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc102a90350>"]},"metadata":{},"execution_count":45},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"daUq6EAegBX2","executionInfo":{"status":"ok","timestamp":1648869322666,"user_tz":-360,"elapsed":10,"user":{"displayName":"Aditya Roy","userId":"18366926792676556924"}}},"source":["# Take a minute to find the column where the correlation value is greater than 0.75 at least twice\n","to_drop = 'flavanoids'\n","\n","# Drop that column from the DataFrame\n","wine_df = wine_df.drop(to_drop, axis=1)"],"execution_count":46,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JuhnDE8qKNfG"},"source":["## **Summary:**\n","\n","Basic Pipeline for solving a ML project:\n","\n","1. Read in Dataset\n","\n","2. Get to know your dataset using data vizualisation and other techniques\n","\n","3. Preprocess your dataset:\n","\n","  * remove/impute null values\n","  * remove outliers\n","  * feature scaling\n","  * feature engineering\n","  * feature selection\n","\n","4. train/test split\n","5. choose and build (number of) machine learning algorithm\n","5. train model on training data\n","6. make prediction on test data\n","7. evaluate performance on test data\n","8. visualization of your results\n","\n"]},{"cell_type":"markdown","metadata":{"id":"_6GTCKdCc6H7"},"source":["---\n","."]},{"cell_type":"markdown","metadata":{"id":"tckKAeXvTTNV"},"source":["."]},{"cell_type":"markdown","metadata":{"id":"hmoIM5twTVbz"},"source":["**Reference**\n","\n","\n","* Müller Andreas Christian, and Sarah Guido. Introduction to Machine Learning with Python a Guide for Data Scientists. OReilly, 2018.\n","\n","* DataCamp Python Course"]}]}